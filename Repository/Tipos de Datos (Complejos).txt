Listas
Se trata de conjuntos ordenados de elementos, encerrados por corchetes y separados por comas. 
El orden comienza con el índice 0 para el primer lugar de la Lista. 
Pueden agruparse valores de distintos tipos de datos básicos, y es posible agregar, eliminar o modificar elementos de las listas en cualquier momento (decimos que las Listas son mutables en Python)

# Definición de una lista y referencia a un índice
lista = [10,20,30,40]
print(lista) = [10,20,30,40]
print(lista[0]) = 10
print(lista[3]) = 40

# Modificación de una lista
lista[1] = 25
print(lista) = [10,25,30,40]

# Generación de porciones a partir de una lista
sublista = lista[1:3]
print(lista) = [10, 25, 30, 40]
print(sublista) = [25, 30]
print(lista[:-1]) = [10, 25, 30]
print(lista[:]) = [10, 25, 30, 40]

Tuplas
Las Tuplas son básicamente Listas de elementos estáticas, es decir, que no pueden modificarse (decimos que las Tuplas son inmutables en Python). 
Para su definición, en lugar de corchetes se encierran valores separados por comas entre paréntesis.

# Definición de una tupla y referencia a un índice
tupla = (6, 7, 8,9)
print(tupla) = (6, 7, 8, 9)
print(tupla[0]) = 6
print(tupla[3]) = 9

# Generación de porciones a partir de una tupla
subtupla = tupla[1:3]
print(tupla) = (6, 7, 8, 9)
print(subtupla) = (7, 8)
print(tupla[:-1]) = (6, 7, 8)
print(tupla[:]) = (6, 7, 8, 9)

La similitud entre Listas y Tuplas es tan explícita que se puede bloquear una lista tranformándola en una tupla con la función tuple() o bien desbloquear una tupla para transformarla en una lista con la función list()

Diccionarios
En los Diccionarios cada elemento se compone de un par clave-valor, y para su definición es necesario encerrar los elementos entre llaves. Es posible acceder a un valor utilizando su clave, pero no al revés. Por este motivo, no se pueden repetir las claves para elementos distintos, pero sí es posible agregar, eliminar o modificar valores (Los diccionarios son mutables).